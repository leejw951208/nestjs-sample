services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
            target: production
        container_name: nestjs-sample-app
        ports:
            - '3000:3000'
        environment:
            - NODE_ENV=production
        env_file:
            - ./envs/.env.production
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
            interval: 30s
            timeout: 3s
            start_period: 40s
            retries: 3
        restart: unless-stopped
        command: ['node', 'dist/main.js']
        networks:
            - app-network

    db:
        image: postgres:15-alpine
        container_name: nestjs-sample-db
        environment:
            - POSTGRES_DB=nestjs
            - POSTGRES_PASSWORD=password123!@
        ports:
            - '5432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped
        networks:
            - app-network

volumes:
    postgres_data:

networks:
    app-network:
        driver: bridge
